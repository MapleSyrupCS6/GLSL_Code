float rand(vec2 id)
{
    return fract(sin(dot(id, vec2(12.9898, 78.233))) * 43758.5453);
}


void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = (fragCoord*2.0 - iResolution.xy)/ min(iResolution.x, iResolution.y);

    float n = 2.0;
    vec2 st = uv * n;
    st = fract(st);
    vec2 id = (floor(uv*n)+0.5);
    
    float offs = rand(id)*60.;
    
    vec3 col = vec3(0.0);
    
	st = abs(st);
    
    float d = dot(st, normalize(vec2(1.0, 1.0)));
    d = max(d, st.x/2.);
    
    col = vec3(step(d-0.6, 0.2*sin(iTime*5.+offs)*20./**50.*/));
    
    vec3 c1 = vec3(0.0, 0.0, 0.0);
    vec3 c2 = vec3(0.3, 1.0, 0.1);
    
    col = mix(c1, c2, col);


    // Output to screen
    fragColor = vec4(col,1.0);
}